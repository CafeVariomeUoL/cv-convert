name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - master
    paths:
      - 'src/**'
      - 'test/**'
      - 'cv-convert.cabal'
      - 'stack.yaml'
      - 'stack.yaml.lock'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: mysecretpassword
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      mysql:
        image: mariadb
        env:
          MYSQL_DATABASE: mysql
          MYSQL_ROOT_PASSWORD: mysecretpassword
        ports:
          - 3306:3306
    
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
      
      - name: Cache global stack folder
        uses: actions/cache@v2
        env:
          cache-name: cache-stack
        with:
          path: ~/.stack
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache stack-work folder
        uses: actions/cache@v2
        env:
          cache-name: cache-stack-work
        with:
          path: .stack-work
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Build & Test üîß # This example project is built using npm and outputs the result to the 'build' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        run: |
          stack --no-terminal test --flag "cv-convert:azure" --jobs=1 --ta "--db-config postgresql://postgres:mysecretpassword@localhost:5432/postgres;mysql://root:mysecretpassword@localhost:3306/mysql"