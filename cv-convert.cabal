name:                cv-convert
version:             0.5.4
build-type:          Simple
cabal-version:       >= 1.25
description: This tool is intended to be used inside CafeVariome to convert 
  and validate various data sets that users wish to import.
  .
  The tool takes a data file along with a @.settings@ file associated with said file.
  The @.settings@ file describes how data should be imported and validated. 
  .
  The tool parses JSON, TXT, CSV and XLSX files and turns each row of data into a JSON object.
  The tool then uses a JavaScript function, defined in the @.settings@ file, to
  process the data row by row. This function returns a JS object, which is then
  converted into JSON and validated against a JSON schema, also provided in the @.settings@ file.
  If a row is valid, it is either stored in a JSON output file or written directly into 
  the CafeVariome database.
  .
  A minimal @.settings@ file is a JSON object with the @processFunction@ attribute:
  .
  >{
  >  "processFunction": "return row"
  >}
  .
  This @.settings@ file acts as the identity on any given input. The @.settings@ file
  should not be created manually, but should be generated by the [cv-convert-react](https://github.com/CafeVariomeUoL/cv-convert-react) 
  tool instead.


-- For information on compiling C with cabal:
-- http://blog.ezyang.com/2010/06/setting-up-cabal-the-ffi-and-c2hs/
-- http://stackoverflow.com/questions/37572628/statically-link-c-library-with-a-haskell-library


Flag Azure
  Description: Compiling in Azure pipelines
  Default:     False

executable cv-convert
  default-language:   Haskell2010
  default-extensions:
    RecordWildCards, FlexibleInstances, FlexibleContexts, DeriveGeneric, OverloadedStrings
  main-is: Main.hs
  other-modules: Paths_cv_convert
  build-depends: 
      cv-convert
    , base
    , optparse-generic
    , aeson
    , bytestring
    , filepath
    , directory
    , load-env
    , postgresql-pure
    , data-default-class
    , string-conv
    , with-utf8
    , quickjs-hs >= 0.1.2.1
    , mysql-haskell
  ghc-options: -Wall -O2 -fno-warn-orphans
  if os(linux)
    ghc-options: -O2 -static
    ld-options: -static -pthread 
library
  build-depends:
      base
    , containers
    , mtl
    , exceptions
    , aeson
    , aeson-pretty
    , scientific
    , text
    , vector
    , unordered-containers
    , string-conv
    , hjsonschema
    , string-interpolate
    , shorten-strings
    , split
    , xlsx >= 0.8.2
    -- used in Parse/Xlsx.hs
    , microlens
    , microlens-mtl
    , bytestring
    , cassava
    , yeshql-core
    , yeshql-hdbc
    , HDBC
    , convertible
    , postgresql-pure
    , uuid
    , filepath
    , directory
    , hjsonpointer >= 1.5.0
    , hashable
    , with-utf8
    , time
    , cryptohash-sha256
    , HTTP
    , quickjs-hs
    , mysql-haskell
    , io-streams
    , network-uri
    , data-default-class
  hs-source-dirs:
    src
  exposed-modules:
    Runtime, Runtime.Types, Runtime.Error, Runtime.Utils, JSON.Utils, DB, DB.Postgres, DB.MySQL
  other-modules:
    Parse.Xlsx, Parse.Csv, Parse.Utils, Schema, DB.Types, DB.Utils, Paths_cv_convert
  default-language:
    Haskell2010
  default-extensions:
    DeriveGeneric, DeriveAnyClass, DerivingStrategies, DerivingVia, RecordWildCards, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances, OverloadedStrings, ScopedTypeVariables, LambdaCase
  ghc-options: 
    -Wall -Wcompat
    -Wincomplete-record-updates
    -Wincomplete-uni-patterns
    -Wredundant-constraints 
    -O2 -fno-warn-orphans
  if os(linux)
    ghc-options: -O2 -static
    ld-options: -static -pthread

test-suite cv-convert-test
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      Runtime.Tests JSON.Utils.Tests Paths_cv_convert
  default-extensions:
    ScopedTypeVariables, OverloadedStrings, DerivingStrategies, GeneralizedNewtypeDeriving, DeriveGeneric, DeriveAnyClass, FlexibleContexts, RecordWildCards
  hs-source-dirs:
      test
  if !flag(azure)
    ghc-options: -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      base
    , cv-convert
    , tasty
    , tasty-hunit
    , tasty-quickcheck
    , tasty-golden
    , HUnit
    , QuickCheck
    , aeson
    , exceptions
    , text
    , unordered-containers
    , containers
    , vector
    , uuid
    , string-conv
    , string-interpolate
    , hashable
    , with-utf8
    , postgresql-pure
    , network-uri
    , data-default-class
    , split
    , yeshql-hdbc
    , HDBC
    , bytestring
    , filepath
    , directory
    , strings
    , unliftio-core
    , quickjs-hs
    , mysql-haskell
  default-language: Haskell2010