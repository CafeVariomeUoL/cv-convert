name:                cv-convert
version:             0.1
build-type:          Simple
cabal-version:       >= 1.25

-- For information on compiling C with cabal:
-- http://blog.ezyang.com/2010/06/setting-up-cabal-the-ffi-and-c2hs/
-- http://stackoverflow.com/questions/37572628/statically-link-c-library-with-a-haskell-library

executable cv-convert
  default-language:   Haskell2010
  main-is: Main.hs
  build-depends: 
    cv-convert, 
    base, 
    mtl, 
    scientific, 
    aeson, 
    bytestring, 
    unordered-containers, 
    text, 
    vector, 
    lens, 
    filepath, 
    pretty-simple, 
    string-conv, 
    aeson-pretty
  
  ghc-options: -Wall -O2
  if os(linux)
    ghc-options: -static -threaded
    ld-options: -static -pthread
  

library
  build-depends:
    base, 
    inline-c, 
    template-haskell, 
    containers, 
    mtl,
    transformers,
    aeson, 
    scientific, 
    text, 
    vector, 
    unordered-containers,
    string-conv, 
    hjsonschema, 
    string-interpolate, 
    shorten-strings, 
    split, 
    xlsx,
    lens,
    bytestring,
    cassava
  hs-source-dirs:
    src
  exposed-modules:
    Quickjs, Schema, Parse.Xlsx, Parse.Csv
  other-modules:       Quickjs.Internal
  default-language:
    Haskell2010
  Include-dirs: quickjs
  -- Order matters for dynamic linking, see GHC#12152.
  -- To make both `cabal repl` and `stack ghci` work, we have to
  -- make "a.cpp" come alphabetically before "main.cpp".
  C-sources:    quickjs/cutils.c,
                quickjs/libbf.c,
                quickjs/libregexp.c,
                quickjs/libunicode.c,
                quickjs/quickjs.h,
                quickjs/quickjs.c,
                quickjs/quickjs-libc.h,
                quickjs/quickjs-libc.c
  cc-options: -static -D_GNU_SOURCE -DCONFIG_VERSION="2020-04-12" -DCONFIG_BIGNUM -O2

  ghc-options: -Wall -O2 -fno-warn-orphans
  if os(linux)
    ghc-options: -static
    ld-options: -static -pthread